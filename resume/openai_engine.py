from django.conf import settings

import openai
from openai import OpenAI

client = OpenAI(api_key=settings.OPENAI_API_KEY)


def send_openai_message(user_message:str, meta_prompt:str = None):
    """
    Sends a message to the OpenAI API with a specified system prompt.

    Parameters:
        user_message (str): The content provided by the user to be processed.
        meta_prompt (str): The system prompt to guide the assistant's response style.
                           Defaults to a generic "helpful assistant" if not specified.

    Returns:
        str: The response content generated by the OpenAI API, or an error message in case of an exception.
    """
    meta_prompt = meta_prompt if meta_prompt else "You are a helpful assistant."

    try:
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": meta_prompt},
                {"role": "user", "content": user_message}
            ]
        )

        return response.choices[0].message.content

    except openai.APIError as e:
        return f"OpenAI API returned an API Error: {e}"
        pass
    except openai.RateLimitError as e:
        return f"OpenAI API request exceeded rate limit: {e}"
        pass
    except Exception as e:
        return f"Error: {str(e)}"


# TODO Convert class based structure
def enhance_resume_experience(user_message:str):
    """
    Enhances work experience descriptions to be suitable for a resume in the STAR format.

    Parameters:
        user_message (str): The user's work experience description(s) to be improved.

    Returns:
        str: The STAR-enhanced, resume-ready work experience description(s).
    """

    meta_prompt = """
    Act as a resume experience enhancer. 
    I will provide one or more descriptions of my work experience. 
    Enhance each description to be concise, clear, and suitable for 
    the STAR format without explicitly stating it. 
    Ensure each response is ready for resume use, with a one-line space 
    between each experience and no bullet points.
    """.strip()

    return send_openai_message(
        user_message=user_message, meta_prompt=meta_prompt
    )


def enhance_project_description(user_message:str):
    """
    Enhances project description to be suitable for a resume in the STAR format.

    Parameters:
        user_message (str): The user's project description to be improved.

    Returns:
        str: The STAR-enhanced, resume-ready project description.
    """

    meta_prompt = """
    Act as a project description enhancer. 
    I will provide one or more descriptions of my projects. 
    Enhance each description to be concise, clear, and suitable for the STAR format without explicitly stating it. 
    Ensure each response is ready for resume use, focused on key details. 
Responses should maintain clarity and impact without being lengthy.
    """.strip()

    return send_openai_message(
        user_message=user_message, meta_prompt=meta_prompt
    )